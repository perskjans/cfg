#vim: filetype=sh

alias e=$EDITOR
alias vi=$EDITOR
alias vim=$EDITOR


alias ..='cd ..'
alias ...='cd ../..'

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

alias sx='startx $XDG_CONFIG_HOME/X11/xinitrc'

alias workmanset='export p_kb_workman=1'
alias workmanunset='unset p_kb_workman'
#alias workmanset='export p_kb_workman=1; xresources'
#alias workmanunset='unset p_kb_workman; xresources'

# Use Vim to read man pages
vman() {
    if [ $# -eq 0 ]; then
        /usr/bin/man
    elif whatis $* ; then
        /usr/bin/man $* | col -b | vim -c 'set ft=man nomod nolist' -
    fi
}
alias man='vman'

alias n='nnn -H'

alias pl='. $HOME/.profile'

alias psa='ps aux | grep'
alias jb='jobs'
alias ll='ls -alhF'
alias la='ls -Ah'
alias l='ls -hCF'

alias xresources='. $HOME/.config/X11/xprofile'

alias tmux='tmux -u -f $HOME/.config/tmux/tmux.conf'
alias tx='$HOME/bin/p_runtmux'

## Git related aliases
alias g='git'
alias ga='g add'
alias gA='ga $(gs -s | sed "s|^.*\ ||g")'
alias gd='g diff --color=auto'
alias gbr='g branch'
alias gcd='cd $(git rev-parse --show-toplevel)'
alias gchp='g cherry-pick'
alias gci='g commit'
alias gco='g checkout'
alias gls='g ls-tree --full-tree --name-only -rt HEAD'
alias gme='g merge'
alias gps='g push'
alias gpu='g pull'
alias grs='g restore --staged'
alias gs='g status'
alias gsm='g submodule'

alias glgf='g log -p --'
alias glgg="g log --graph --oneline --decorate --all"
alias glg1="g log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %s - %an%C(bold yellow)%d%C(reset)' --all"
#alias glg2="g log --reverse --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"
alias glg2="g log --reverse --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %s - %an%C(bold yellow)%d%C(reset)' --all"
alias glg3="g log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''%s - %an' --all"
alias glg4="g log --reverse --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''%s - %an' --all"

alias gcl='p_gitutils clone'
alias gfa='p_gitutils findall'
alias gpa='p_gitutils pullall'
alias gsa='p_gitutils submoduleadd'
alias gsi='p_gitutils submoduleinit'
alias gsd='p_gitutils submoduledeinit'
alias gsr='p_gitutils submodulerm'
alias gsu='p_gitutils submoduleupdate'

alias gdirset='export GIT_DIR=$HOME/.cfg.git/; export GIT_WORK_TREE=$HOME'
alias gdirunset='unset GIT_DIR; unset GIT_WORK_TREE'

GitBranch()
{
    local branch=$(git branch | grep "^* " | cut -c 3-)
    branch="${branch/?[7;33m/}"
    branch="${branch/?[m/}"
    echo $branch
}

alias gsetupstream='g push --set-upstream origin $(GitBranch)'
alias gdeleteupstream='g push --delete origin $(GitBranch)'
